name: Governance Checks

concurrency:
  group: ${{ github.workflow }}

on:
  schedule:
    - cron: "0 */2 * * *"
  push:
    paths-ignore:
      - "reports/**"
      - "README.md"
    branches:
      - main
  workflow_dispatch:

jobs:
  proposals:
    name: Check all live proposals
    runs-on: ubuntu-latest
    env:
      FOUNDRY_PROFILE: ci
      ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
      RPC_MAINNET: ${{ secrets.RPC_MAINNET }}
      RPC_POLYGON: ${{ secrets.RPC_POLYGON }}
      RPC_AVALANCHE: ${{ secrets.RPC_AVALANCHE }}
      RPC_OPTIMISM: ${{ secrets.RPC_OPTIMISM }}
      RPC_ARBITRUM: ${{ secrets.RPC_ARBITRUM }}
      RPC_BASE: ${{ secrets.RPC_BASE }}
      RPC_GNOSIS: ${{ secrets.RPC_GNOSIS }}
      RPC_BNB: ${{ secrets.RPC_BNB }}
      RPC_SCROLL: ${{ secrets.RPC_SCROLL }}
      RPC_ZKSYNC: ${{ secrets.RPC_ZKSYNC }}
      TENDERLY_ACCESS_TOKEN: ${{ secrets.TENDERLY_ACCESS_TOKEN }}
      TENDERLY_PROJECT_SLUG: ${{ secrets.TENDERLY_PROJECT_SLUG }}
      TENDERLY_ACCOUNT: ${{ secrets.TENDERLY_ACCOUNT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: oven-sh/setup-bun@v1
      - name: Install dependencies
        run: bun install

      - name: Install Foundry
        uses: bgd-labs/foundry-zksync-toolchain@340cea9a42119d9a77a6bb0a8236d4311582b709
        with:
          version: nightly

      - name: scheduled proposals
        id: all
        run: bun run start --type proposal

      - name: check diff
        run: |
          if [[ -z $(git status -s) ]]
          then
            echo "tree is clean"
          else
            git config --global user.name 'Cache bot'
            git config --global user.email 'cache-bot@bgdlabs.com'
            git config --global pull.rebase true
            git add .
            git commit -am "fix(cache): automatic cache update :robot:"
            git pull --rebase --autostash
            git push
          exit
          fi

      - name: Post to a Slack channel
        id: slack
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          channel-id: "C068J77L8JG"
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "GitHub Action build result: ${{ job.status }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action build result: ${{ job.status }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  payloads:
    strategy:
      matrix:
        chainId: [1, 10, 56, 100, 137, 324, 1088, 8453, 42161, 43114, 534352]
    needs: ["proposals"]
    name: Check all live payloads
    runs-on: ubuntu-latest
    env:
      FOUNDRY_PROFILE: ci
      ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
      RPC_MAINNET: ${{ secrets.RPC_MAINNET }}
      RPC_POLYGON: ${{ secrets.RPC_POLYGON }}
      RPC_AVALANCHE: ${{ secrets.RPC_AVALANCHE }}
      RPC_OPTIMISM: ${{ secrets.RPC_OPTIMISM }}
      RPC_ARBITRUM: ${{ secrets.RPC_ARBITRUM }}
      RPC_BASE: ${{ secrets.RPC_BASE }}
      RPC_GNOSIS: ${{ secrets.RPC_GNOSIS }}
      RPC_BNB: ${{ secrets.RPC_BNB }}
      RPC_SCROLL: ${{ secrets.RPC_SCROLL }}
      RPC_ZKSYNC: ${{ secrets.RPC_ZKSYNC }}
      TENDERLY_ACCESS_TOKEN: ${{ secrets.TENDERLY_ACCESS_TOKEN }}
      TENDERLY_PROJECT_SLUG: ${{ secrets.TENDERLY_PROJECT_SLUG }}
      TENDERLY_ACCOUNT: ${{ secrets.TENDERLY_ACCOUNT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          ref: "main"

      - uses: oven-sh/setup-bun@v1
      - name: Install dependencies
        run: bun install

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: scheduled ${{ matrix.chainId }}
        id: all
        run: bun run start --type payload --chainId ${{ matrix.chainId }}
        env:
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
          RPC_MAINNET: ${{ secrets.RPC_MAINNET }}
          RPC_POLYGON: ${{ secrets.RPC_POLYGON }}
          RPC_AVALANCHE: ${{ secrets.RPC_AVALANCHE }}
          RPC_OPTIMISM: ${{ secrets.RPC_OPTIMISM }}
          RPC_ARBITRUM: ${{ secrets.RPC_ARBITRUM }}
          RPC_BASE: ${{ secrets.RPC_BASE }}
          RPC_GNOSIS: ${{ secrets.RPC_GNOSIS }}
          RPC_BNB: ${{ secrets.RPC_BNB }}
          RPC_SCROLL: ${{ secrets.RPC_SCROLL }}
          RPC_ZKSYNC: ${{ secrets.RPC_ZKSYNC }}
          TENDERLY_ACCESS_TOKEN: ${{ secrets.TENDERLY_ACCESS_TOKEN }}
          TENDERLY_PROJECT_SLUG: ${{ secrets.TENDERLY_PROJECT_SLUG }}
          TENDERLY_ACCOUNT: ${{ secrets.TENDERLY_ACCOUNT }}

      - name: check diff
        run: |
          if [[ -z $(git status -s) ]]
          then
            echo "tree is clean"
          else
            git config --global user.name 'Cache bot'
            git config --global user.email 'cache-bot@bgdlabs.com'
            git config --global pull.rebase true
            git add .
            git commit -am "fix(cache): automatic cache update :robot:"
            git pull --rebase --autostash
            git push
          exit
          fi

      - name: Post to a Slack channel
        id: slack
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          channel-id: "C068J77L8JG"
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "GitHub Action build result: ${{ job.status }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action build result: ${{ job.status }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
